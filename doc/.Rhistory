mutate(sex = fct_recode(as.factor(sex), male = "TRUE_FALSE",
female = "FALSE_TRUE", other = "FALSE_FALSE")) %>%
filter(sex != "other") %>%
ggplot(aes(sex, fill = author)) +
labs(x = "Gender indicators") +
geom_bar(position = "dodge")
layout <- matrix(c(1,2,3,4),2,2,byrow=TRUE)
multiplot(p1, p2, p3, p4, layout=layout)
p1 <- spooky %>%
unnest_tokens(word, text) %>%
filter((word == "man") | (word == "woman")) %>%
mutate(word = as.factor(word)) %>%
mutate(word = fct_relevel(word, "woman", "man")) %>%
ggplot(aes(word, fill = author)) +
geom_bar(position = "dodge") +
theme(axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank())
p2 <- spooky %>%
unnest_tokens(word, text) %>%
filter((word == "he") | (word == "she")) %>%
mutate(word = as.factor(word)) %>%
mutate(word = fct_relevel(word, "she", "he")) %>%
ggplot(aes(word, fill = author)) +
geom_bar(position = "dodge")
p3 <- spooky %>%
unnest_tokens(word, text) %>%
filter((word == "him") | (word == "her")) %>%
ggplot(aes(word, fill = author)) +
geom_bar(position = "dodge")
p4 <- spooky %>%
unnest_tokens(word, text) %>%
mutate(male = ( word == "he" | word == "him" | word == "his" | word == "male" |
word == "man" | word == "gentleman" | word == "sir" |
word == "lord" | word == "men" )) %>%
mutate(female = ( word == "she" | word == "her" | word == "hers" | word == "female" |
word == "woman" | word == "lady" | word == "madam" |
word == "women" )) %>%
unite(sex, male, female) %>%
mutate(sex = fct_recode(as.factor(sex), male = "TRUE_FALSE",
female = "FALSE_TRUE", other = "FALSE_FALSE")) %>%
filter(sex != "other") %>%
ggplot(aes(sex, fill = author)) +
labs(x = "Gender indicators") +
geom_bar(position = "dodge")
layout <- matrix(c(1,2,3,4),2,2,byrow=TRUE)
multiplot(p1, p2, p3, p4, layout=layout)
p1 <- spooky %>%
unnest_tokens(word, text) %>%
filter((word == "man") | (word == "woman")) %>%
mutate(word = as.factor(word)) %>%
mutate(word = fct_relevel(word, "woman", "man")) %>%
ggplot(aes(word, fill = author)) +
geom_bar(position = "dodge") +
theme(axis.title.x=element_blank())
p2 <- spooky %>%
unnest_tokens(word, text) %>%
filter((word == "he") | (word == "she")) %>%
mutate(word = as.factor(word)) %>%
mutate(word = fct_relevel(word, "she", "he")) %>%
ggplot(aes(word, fill = author)) +
geom_bar(position = "dodge")
p3 <- spooky %>%
unnest_tokens(word, text) %>%
filter((word == "him") | (word == "her")) %>%
ggplot(aes(word, fill = author)) +
geom_bar(position = "dodge")
p4 <- spooky %>%
unnest_tokens(word, text) %>%
mutate(male = ( word == "he" | word == "him" | word == "his" | word == "male" |
word == "man" | word == "gentleman" | word == "sir" |
word == "lord" | word == "men" )) %>%
mutate(female = ( word == "she" | word == "her" | word == "hers" | word == "female" |
word == "woman" | word == "lady" | word == "madam" |
word == "women" )) %>%
unite(sex, male, female) %>%
mutate(sex = fct_recode(as.factor(sex), male = "TRUE_FALSE",
female = "FALSE_TRUE", other = "FALSE_FALSE")) %>%
filter(sex != "other") %>%
ggplot(aes(sex, fill = author)) +
labs(x = "Gender indicators") +
geom_bar(position = "dodge")
layout <- matrix(c(1,2,3,4),2,2,byrow=TRUE)
multiplot(p1, p2, p3, p4, layout=layout)
p1 <- spooky %>%
unnest_tokens(word, text) %>%
filter((word == "man") | (word == "woman")) %>%
mutate(word = as.factor(word)) %>%
mutate(word = fct_relevel(word, "woman", "man")) %>%
ggplot(aes(word, fill = author)) +
geom_bar(position = "dodge") +
theme(axis.title.x=element_blank())
p2 <- spooky %>%
unnest_tokens(word, text) %>%
filter((word == "he") | (word == "she")) %>%
mutate(word = as.factor(word)) %>%
mutate(word = fct_relevel(word, "she", "he")) %>%
ggplot(aes(word, fill = author)) +
geom_bar(position = "dodge") +
theme(axis.title.x=element_blank())
p3 <- spooky %>%
unnest_tokens(word, text) %>%
filter((word == "him") | (word == "her")) %>%
ggplot(aes(word, fill = author)) +
geom_bar(position = "dodge") +
theme(axis.title.x=element_blank())
p4 <- spooky %>%
unnest_tokens(word, text) %>%
mutate(male = ( word == "he" | word == "him" | word == "his" | word == "male" |
word == "man" | word == "gentleman" | word == "sir" |
word == "lord" | word == "men" )) %>%
mutate(female = ( word == "she" | word == "her" | word == "hers" | word == "female" |
word == "woman" | word == "lady" | word == "madam" |
word == "women" )) %>%
unite(sex, male, female) %>%
mutate(sex = fct_recode(as.factor(sex), male = "TRUE_FALSE",
female = "FALSE_TRUE", other = "FALSE_FALSE")) %>%
filter(sex != "other") %>%
ggplot(aes(sex, fill = author)) +
labs(x = "Gender indicators") +
geom_bar(position = "dodge")
layout <- matrix(c(1,2,3,4),2,2,byrow=TRUE)
multiplot(p1, p2, p3, p4, layout=layout)
packages.used <- c("ggplot2", "dplyr", "tibble", "tidyr",  "stringr",
"tidytext", "topicmodels", "wordcloud", "ggridges", "forcats")
packages.needed <- setdiff(packages.used, intersect(installed.packages()[,1], packages.used))
if (length(packages.needed) > 0) {
install.packages(packages.needed, dependencies = TRUE, repos = 'http://cran.us.r-project.org')
}
library(ggplot2)
library(dplyr)
library(tibble)
library(tidyr)
library(stringr)
library(tidytext)
library(topicmodels)
library(wordcloud)
library(ggridges)
library(forcats)
source("../libs/multiplot.R")
spooky <- read.csv('../data/spooky.csv', as.is = TRUE)
head(spooky)
sum(is.na(spooky))
spooky$author <- as.factor(spooky$author)
summary(spooky)
ggplot(spooky) +
geom_bar(aes(author, fill = author)) +
ggtitle("Number of Sentences by Author") +
ylab("") +
xlab("") +
theme(legend.position = "none")
spooky$nchar <- str_length(spooky$text)
wordcount <- function(str) {
sapply(gregexpr("\\b\\W+\\b", str, perl=TRUE), function(x) sum(x>0) ) + 1
}
spooky$nword <- wordcount(spooky$text)
head(spooky)
summary_nchar <- spooky %>%
group_by(author) %>%
summarize(mean = mean(nchar), median = median(nchar), std = sd(nchar))
summary_nword <- spooky %>%
group_by(author) %>%
summarize(mean = mean(nword), median = median(nword), std = sd(nword))
summary_nchar
summary_nword
p1 <- ggplot(spooky, aes(nchar, ..density.., fill = author)) +
geom_density(alpha = .5) +
xlim(0, 500) +
xlab("") +
ylab("") +
labs(fill = 'Author') +
ggtitle("Density of Number of Characters in a Sentence") +
theme(legend.position = "bottom")
p2 <- ggplot(spooky, aes(nword, ..density.., fill = author)) +
geom_density(alpha = .5) +
xlim(0, 100) +
xlab("") +
ylab("") +
labs(fill = 'Author') +
ggtitle("Density of Number of Words in a Sentence") +
theme(legend.position = "bottom")
multiplot(p1, p2)
summary_nchar <- spooky %>%
group_by(author) %>%
summarize(mean = mean(nchar), median = median(nchar), std = sd(nchar))
summary_nword <- spooky %>%
group_by(author) %>%
summarize(mean = mean(nword), median = median(nword), std = sd(nword))
summary_nchar
summary_nword
p1 <- ggplot(spooky, aes(nchar, ..density.., fill = author)) +
geom_density(alpha = .5) +
xlim(0, 500) +
xlab("") +
ylab("") +
labs(fill = 'Author') +
ggtitle("Density of Number of Characters in a Sentence") +
theme(legend.position = "bottom")
p2 <- ggplot(spooky, aes(nword, ..density.., fill = author)) +
geom_density(alpha = .5) +
xlim(0, 100) +
xlab("") +
ylab("") +
labs(fill = 'Author') +
ggtitle("Density of Number of Words in a Sentence") +
theme(legend.position = "bottom")
png(".../figs/fig1.png")
multiplot(p1, p2)
dev.off()
summary_nchar <- spooky %>%
group_by(author) %>%
summarize(mean = mean(nchar), median = median(nchar), std = sd(nchar))
summary_nword <- spooky %>%
group_by(author) %>%
summarize(mean = mean(nword), median = median(nword), std = sd(nword))
summary_nchar
summary_nword
p1 <- ggplot(spooky, aes(nchar, ..density.., fill = author)) +
geom_density(alpha = .5) +
xlim(0, 500) +
xlab("") +
ylab("") +
labs(fill = 'Author') +
ggtitle("Density of Number of Characters in a Sentence") +
theme(legend.position = "bottom")
p2 <- ggplot(spooky, aes(nword, ..density.., fill = author)) +
geom_density(alpha = .5) +
xlim(0, 100) +
xlab("") +
ylab("") +
labs(fill = 'Author') +
ggtitle("Density of Number of Words in a Sentence") +
theme(legend.position = "bottom")
multiplot(p1, p2)
spooky$npunct <- str_count(spooky$text, ",") + str_count(spooky$text, ";") + str_count(spooky$text, ":")
summary_npunct <- spooky %>%
group_by(author) %>%
summarize(mean = mean(npunct), median = median(npunct), std = sd(npunct))
summary_npunct
ggplot(spooky, aes(npunct, ..density.., fill = author)) +
geom_histogram(alpha = 1) +
xlim(0, 10) +
xlab("") +
ylab("") +
labs(fill = 'Author') +
ggtitle("Density of Number of Punctuation Marks in a Sentence") +
theme(legend.position = "bottom")
packages.used <- c("ggplot2", "dplyr", "tibble", "tidyr",  "stringr",
"tidytext", "topicmodels", "wordcloud", "ggridges", "forcats")
packages.needed <- setdiff(packages.used, intersect(installed.packages()[,1], packages.used))
if (length(packages.needed) > 0) {
install.packages(packages.needed, dependencies = TRUE, repos = 'http://cran.us.r-project.org')
}
library(ggplot2)
library(dplyr)
library(tibble)
library(tidyr)
library(stringr)
library(tidytext)
library(topicmodels)
library(wordcloud)
library(ggridges)
library(forcats)
source("../libs/multiplot.R")
spooky <- read.csv('../data/spooky.csv', as.is = TRUE)
head(spooky)
sum(is.na(spooky))
spooky$author <- as.factor(spooky$author)
summary(spooky)
ggplot(spooky) +
geom_bar(aes(author, fill = author)) +
ggtitle("Number of Sentences by Author") +
ylab("") +
xlab("") +
theme(legend.position = "none")
spooky$nchar <- str_length(spooky$text)
wordcount <- function(str) {
sapply(gregexpr("\\b\\W+\\b", str, perl=TRUE), function(x) sum(x>0) ) + 1
}
spooky$nword <- wordcount(spooky$text)
head(spooky)
summary_nchar <- spooky %>%
group_by(author) %>%
summarize(mean = mean(nchar), median = median(nchar), std = sd(nchar))
summary_nword <- spooky %>%
group_by(author) %>%
summarize(mean = mean(nword), median = median(nword), std = sd(nword))
summary_nchar
summary_nword
p1 <- ggplot(spooky, aes(nchar, ..density.., fill = author)) +
geom_density(alpha = .5) +
xlim(0, 500) +
xlab("") +
ylab("") +
labs(fill = 'Author') +
ggtitle("Density of Number of Characters in a Sentence") +
theme(legend.position = "bottom")
p2 <- ggplot(spooky, aes(nword, ..density.., fill = author)) +
geom_density(alpha = .5) +
xlim(0, 100) +
xlab("") +
ylab("") +
labs(fill = 'Author') +
ggtitle("Density of Number of Words in a Sentence") +
theme(legend.position = "bottom")
multiplot(p1, p2)
spooky$npunct <- str_count(spooky$text, ",") + str_count(spooky$text, ";") + str_count(spooky$text, ":")
summary_npunct <- spooky %>%
group_by(author) %>%
summarize(mean = mean(npunct), median = median(npunct), std = sd(npunct))
summary_npunct
ggplot(spooky, aes(npunct, ..density.., fill = author)) +
geom_histogram(alpha = 1) +
xlim(0, 10) +
xlab("") +
ylab("") +
labs(fill = 'Author') +
ggtitle("Density of Number of Punctuation Marks in a Sentence") +
theme(legend.position = "bottom")
spooky_word <- unnest_tokens(spooky, word, text)
head(spooky_word)
spooky_word$word_nchar <- str_length(spooky_word$word)
head(spooky_word)
summary_word_nchar <- spooky_word %>%
group_by(author) %>%
summarize(mean = mean(word_nchar), median = median(word_nchar), std = sd(word_nchar))
summary_word_nchar
spooky_word <- anti_join(spooky_word, stop_words, by = "word")
spooky_word$word_nchar <- str_length(spooky_word$word)
head(spooky_word)
summary_word_nchar <- spooky_word %>%
group_by(author) %>%
summarize(mean = mean(word_nchar), median = median(word_nchar), std = sd(word_nchar))
summary_word_nchar
ggplot(spooky_word) +
geom_density(aes(word_nchar, fill = author), bw = 0.05, alpha = 0.3) +
scale_x_log10() +
xlab("") +
ylab("") +
ggtitle("Word Length (Number of Characters) w/o Stop Words")
p1 <- spooky %>%
unnest_tokens(word, text) %>%
filter((word == "man") | (word == "woman")) %>%
mutate(word = as.factor(word)) %>%
mutate(word = fct_relevel(word, "woman", "man")) %>%
ggplot(aes(word, fill = author)) +
geom_bar(position = "dodge") +
theme(axis.title.x=element_blank())
p2 <- spooky %>%
unnest_tokens(word, text) %>%
filter((word == "he") | (word == "she")) %>%
mutate(word = as.factor(word)) %>%
mutate(word = fct_relevel(word, "she", "he")) %>%
ggplot(aes(word, fill = author)) +
geom_bar(position = "dodge") +
theme(axis.title.x=element_blank())
p3 <- spooky %>%
unnest_tokens(word, text) %>%
filter((word == "him") | (word == "her")) %>%
ggplot(aes(word, fill = author)) +
geom_bar(position = "dodge") +
theme(axis.title.x=element_blank())
p4 <- spooky %>%
unnest_tokens(word, text) %>%
mutate(male = ( word == "he" | word == "him" | word == "his" | word == "male" |
word == "man" | word == "gentleman" | word == "sir" |
word == "lord" | word == "men" )) %>%
mutate(female = ( word == "she" | word == "her" | word == "hers" | word == "female" |
word == "woman" | word == "lady" | word == "madam" |
word == "women" )) %>%
unite(sex, male, female) %>%
mutate(sex = fct_recode(as.factor(sex), male = "TRUE_FALSE",
female = "FALSE_TRUE", other = "FALSE_FALSE")) %>%
filter(sex != "other") %>%
ggplot(aes(sex, fill = author)) +
labs(x = "Gender indicators") +
geom_bar(position = "dodge")
layout <- matrix(c(1,2,3,4),2,2,byrow=TRUE)
multiplot(p1, p2, p3, p4, layout=layout)
words <- count(group_by(spooky_word, word))$word
freqs <- count(group_by(spooky_word, word))$n
head(sort(freqs, decreasing = TRUE))
wordcloud(words, freqs, max.words = 60, color = c("yellow", "green4", "blue4"))
author_words <- count(group_by(spooky_word, word, author))
all_words <- rename(count(group_by(spooky_word, word)), all = n)
author_words <- left_join(author_words, all_words, by = "word")
author_words <- arrange(author_words, desc(all))
author_words <- ungroup(head(author_words, 80))
ggplot(author_words) +
geom_col(aes(reorder(word, all, FUN = min), n, fill = author)) +
xlab(NULL) +
coord_flip() +
facet_wrap(~ author) +
theme(legend.position = "none")
frequency <- count(spooky_word, author, word)
tf_idf <- bind_tf_idf(frequency, word, author, n)
tf_idf <- arrange(tf_idf, desc(tf_idf))
tf_idf <- mutate(tf_idf, word = factor(word, levels = rev(unique(word))))
tf_idf_30 <- top_n(tf_idf, 30, tf_idf)
ggplot(tf_idf_30) +
geom_col(aes(word, tf_idf, fill = author)) +
labs(x = NULL, y = "TF-IDF values") +
theme(legend.position = "top", axis.text.x  = element_text(angle=45, hjust=1, vjust=0.9))
tf_idf <- ungroup(top_n(group_by(tf_idf, author), 20, tf_idf))
ggplot(tf_idf) +
geom_col(aes(word, tf_idf, fill = author)) +
labs(x = NULL, y = "tf-idf") +
theme(legend.position = "none") +
facet_wrap(~ author, ncol = 3, scales = "free") +
coord_flip() +
labs(y = "TF-IDF values")
t2 <- spooky %>% select(author, text) %>% unnest_tokens(bigram, text, token = "ngrams", n = 2)
sample_n(t2, 5)
bi_sep <- t2 %>%
separate(bigram, c("word1", "word2"), sep = " ")
bi_filt <- bi_sep %>%
filter(!word1 %in% stop_words$word) %>%
filter(!word2 %in% stop_words$word)
bigram_counts <- bi_filt %>%
count(word1, word2, sort = TRUE)
t2 <- bi_filt %>%
unite(bigram, word1, word2, sep = " ")
t2_tf_idf <- t2 %>%
count(author, bigram) %>%
bind_tf_idf(bigram, author, n) %>%
arrange(desc(tf_idf))
t2_tf_idf %>%
arrange(desc(tf_idf)) %>%
mutate(bigram = factor(bigram, levels = rev(unique(bigram)))) %>%
group_by(author) %>%
top_n(10, tf_idf) %>%
ungroup() %>%
ggplot(aes(bigram, tf_idf, fill = author)) +
geom_col() +
labs(x = NULL, y = "TF-IDF values") +
theme(legend.position = "none") +
facet_wrap(~ author, ncol = 3, scales = "free") +
coord_flip()
get_sentiments('nrc')
sentiments <- inner_join(spooky_word, get_sentiments('nrc'), by = "word")
count(sentiments, sentiment)
count(sentiments, author, sentiment)
ggplot(count(sentiments, sentiment)) +
geom_col(aes(sentiment, n, fill = sentiment))
ggplot(count(sentiments, author, sentiment)) +
geom_col(aes(sentiment, n, fill = sentiment)) +
facet_wrap(~ author) +
coord_flip() +
theme(legend.position = "none")
spooky_word %>%
filter(author == "EAP") %>%
inner_join(get_sentiments("bing"), by = "word") %>%
count(word, sentiment, sort = TRUE) %>%
ungroup() %>%
group_by(sentiment) %>%
top_n(10, n) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(y = "Contribution to negative/positive sentiment", x = NULL) +
coord_flip() +
ggtitle("Sentiment Analysis: EAP")
spooky_word %>%
filter(author == "HPL") %>%
inner_join(get_sentiments("bing"), by = "word") %>%
count(word, sentiment, sort = TRUE) %>%
ungroup() %>%
group_by(sentiment) %>%
top_n(10, n) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(y = "Contribution to negative/positive sentiment", x = NULL) +
coord_flip() +
ggtitle("Sentiment Analysis: HPL")
spooky_word %>%
filter(author == "MWS") %>%
inner_join(get_sentiments("bing"), by = "word") %>%
count(word, sentiment, sort = TRUE) %>%
ungroup() %>%
group_by(sentiment) %>%
top_n(10, n) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(y = "Contribution to negative/positive sentiment", x = NULL) +
coord_flip() +
ggtitle("Sentiment Analysis: MWS")
p3 <- spooky_word %>%
inner_join(get_sentiments("bing"), by = "word") %>%
ggplot(aes(author, fill = sentiment)) +
geom_bar(position = "fill")
p4 <- spooky_word %>%
inner_join(get_sentiments("bing"), by = "word") %>%
group_by(author, id, sentiment) %>%
count() %>%
spread(sentiment, n, fill = 0) %>%
group_by(author, id) %>%
summarise(neg = sum(negative),
pos = sum(positive)) %>%
arrange(id) %>%
mutate(frac_neg = neg/(neg + pos)) %>%
ggplot(aes(frac_neg, fill = author)) +
geom_density(bw = .2, alpha = 0.3) +
theme(legend.position = "right") +
labs(x = "Fraction of negative words per sentence")
layout <- matrix(c(1,2),1,2,byrow=TRUE)
multiplot(p3, p4, layout=layout)
